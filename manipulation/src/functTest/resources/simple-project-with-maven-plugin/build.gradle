plugins {
    id 'java'
    id 'maven'

    // including this plugin directly instead of by an init script, which allows to use the freshly build version
    id 'org.jboss.gm.manipulation'
}

sourceCompatibility = 1.8

repositories {
    mavenCentral()
}

dependencies {
    implementation group: 'org.apache.commons', name: 'commons-lang3', version: '3.8.1'
    implementation group: 'org.hibernate', name: 'hibernate-core', version: '5.3.7.NOT_A_VALID_VERSION'
    implementation group: 'io.undertow', name: 'undertow-core', version: '2.0.15.NOT_A_VALID_VERSION'
    testImplementation group: 'junit', name: 'junit', version: '4.12'
}

// modify POM generated by `install` task, we will verify that these changes are published by `uploadArchives` task
install {
    repositories.mavenInstaller {
        customizePom(pom, project)
    }
}

uploadArchives {
    repositories {
        mavenDeployer {
            repository(url: "https://repository.jboss.org/nexus/content/repositories/snapshots")
        }
    }
}

def customizePom(pom, gradleProject) {
    // just add some additional info into generated POM
    pom.whenConfigured { generatedPom ->
        generatedPom.project {
            organization {
                name = "JBoss"
                url = "https://www.jboss.org"
            }
            licenses {
                license {
                    name "Apache License, Version 2.0"
                    url "https://www.apache.org/licenses/LICENSE-2.0"
                    distribution "repo"
                }
            }
        }
    }
}

allprojects {

    jar {
        from "$rootDir/build.gradle"
    }

    task srcJar(type: Jar) {
        classifier = 'sources'
        from "$rootDir/gradle.properties"
    }

    task javadocJar(type: Jar, dependsOn: javadoc) {
        classifier 'javadoc'
        from javadoc.destinationDir
    }

    task docsJar(dependsOn: javadocJar)

    artifacts {
        archives srcJar
        archives javadocJar
    }
}
