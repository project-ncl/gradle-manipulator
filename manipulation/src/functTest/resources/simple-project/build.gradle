plugins {
    // including this plugin directly instead of by an init script, which allows to use the freshly build version
    id 'org.jboss.gm.manipulation'
    id 'java'
    id 'maven-publish'
}

sourceCompatibility = 1.8

allprojects {
    group = 'org.acme'

    apply plugin: 'java'
    apply plugin: 'maven-publish'
    apply plugin: 'org.jboss.gm.manipulation'
}

repositories {
    mavenCentral()
}

dependencies {
    implementation group: 'org.apache.commons', name: 'commons-lang3', version: '3.8.1'
    implementation group: 'org.hibernate', name: 'hibernate-core', version: '5.3.7.NOT_A_VALID_VERSION'
    implementation group: 'io.undertow', name: 'undertow-core', version: '2.0.15.NOT_A_VALID_VERSION'
    testImplementation group: 'junit', name: 'junit', version: '4.12'
}

task api(type: Javadoc) {
    group = "Documentation"
    description = "Generates aggregated Javadoc API documentation."
    title = "${rootProject.description} ${version} API"

    dependsOn {
        project.tasks.getByName("jar")
    }

    source project.collect { project ->
        project.sourceSets.main.allJava
    }
}

task docsZip(type: Zip, dependsOn: ['api']) {
    group = "Distribution"
    archiveBaseName = "dummy"
    archiveClassifier = "docs"
    description = "Builds -${archiveClassifier} archive containing api and reference " +
            "for deployment at https://docs.spring.io/spring-framework/docs."

    from (api) {
        into "javadoc-api"
    }
}

task distZip(type: Zip, dependsOn: [docsZip]) {
    group = "Distribution"
    archiveBaseName = "dummy"
    archiveClassifier = "dist"
    description = "Builds -${archiveClassifier} archive, containing all jars and docs, " +
            "suitable for community download page."

    ext.baseDir = "${archiveBaseName}-${project.version}";


    from(zipTree(docsZip.archivePath)) {
        into "${baseDir}/docs"
    }

}

publishing {
    publications {
        main(MavenPublication) {
            from components.java
            artifact distZip
        }
    }

    // we will use this to test that no attempt will be made to publish here
    repositories {
        maven {
            name 'jboss-snapshots-repository'
            url 'https://repository.jboss.org/nexus/content/repositories/snapshots'
        }
    }
}


jar {
    manifest {
         attributes("Implementation-Title": project.name,
                    "Implementation-Version": version)
    }
}
